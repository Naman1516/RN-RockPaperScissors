{"version":3,"sources":["src/PlayScreen.js","App.js","src/signs/rock.png","src/signs/paper.png","src/signs/scissors.png"],"names":["rock","require","paper","scissors","bgColors","randomImg","Math","floor","random","styles","StyleSheet","create","container","alignItems","justifyContent","flex","counter","fontSize","color","TouchableWithoutFeedback","sign","width","height","button","position","bottom","PlayScreen","useState","setCounter","useEffect","timer","setTimeout","prv","clearTimeout","View","style","compose","backgroundColor","Image","source","Button","onPress","title","Text","App","play","setPlay","header","StatusBar","marginBottom","marginTop","module","exports"],"mappings":"gNAIMA,EAAOC,EAAQ,IACfC,EAAQD,EAAQ,IAChBE,EAAWF,EAAQ,IAEnBG,EAAW,CAAC,UAAW,UAAW,WAElCC,EAAY,WAGhB,MAFe,CAACL,EAAME,EAAOC,GACXG,KAAKC,MAAsB,EAAhBD,KAAKE,YAIpCH,IAEA,IAmCMI,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,WAAY,SACZC,eAAgB,SAChBC,KAAM,GAERC,QAAS,CACPC,SAAU,IACVC,MAAOC,KAETC,KAAM,CACJC,MAAO,IACPC,OAAQ,KAEVC,OAAQ,CACNC,SAAU,WACVC,OAAQ,MAIGC,EAvDI,WACjB,MAA8BC,mBAAS,GAAvC,WAAOX,EAAP,KAAgBY,EAAhB,KAaA,OAZAC,qBAAU,WACR,KAAIb,EAAU,GAAd,CAGA,IAAMc,EAAQC,YAAW,WACvBH,GAAW,SAACI,GAAD,OAASA,EAAM,OACzB,KACH,OAAO,WACLC,aAAaH,OAEd,CAACd,IAGF,cAACkB,EAAA,EAAD,CACEC,MAAOzB,IAAW0B,QAChB,CAAEC,gBAAiBjC,EAASY,EAAU,IACtCP,EAAOG,WAHX,SAMGI,EAAU,EACT,qCACE,cAACsB,EAAA,EAAD,CAAOH,MAAO1B,EAAOW,KAAMmB,OAAQlC,MACnC,cAAC6B,EAAA,EAAD,CAAMC,MAAO1B,EAAOc,OAApB,SACE,cAACiB,EAAA,EAAD,CAAQC,QAAS,kBAAMb,EAAW,IAAIc,MAAM,oBAIhD,cAACC,EAAA,EAAD,CAAMR,MAAO1B,EAAOO,QAApB,SAA8BA,OCxCvB,SAAS4B,IACtB,MAAwBjB,oBAAS,GAAjC,WAAOkB,EAAP,KAAaC,EAAb,KACA,OAAOD,EACL,cAAC,EAAD,IAEA,eAACX,EAAA,EAAD,CAAMC,MAAO1B,EAAOG,UAApB,UACE,cAAC+B,EAAA,EAAD,CAAMR,MAAO1B,EAAOsC,OAApB,iCACA,cAACJ,EAAA,EAAD,CAAMR,MAAO,CAAElB,SAAU,IAAzB,4CACA,cAACiB,EAAA,EAAD,CAAMC,MAAO1B,EAAOc,OAApB,SACE,cAACiB,EAAA,EAAD,CAAQE,MAAM,OAAOD,QAAS,kBAAMK,GAAQ,QAE9C,cAACE,EAAA,EAAD,CAAWb,MAAM,YAKvB,IAAM1B,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTG,KAAM,EACNsB,gBAAiB,OACjBxB,WAAY,SACZC,eAAgB,UAElBiC,OAAQ,CACN9B,SAAU,GACVgC,aAAc,IAEhB1B,OAAQ,CACN2B,UAAW,GACX7B,MAAO,Q,uDCpCX8B,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,uC","file":"static/js/app.df443327.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, StyleSheet, Button, Image } from \"react-native\";\r\nimport { TouchableWithoutFeedback } from \"react-native-web\";\r\n\r\nconst rock = require(\"./signs/rock.png\");\r\nconst paper = require(\"./signs/paper.png\");\r\nconst scissors = require(\"./signs/scissors.png\");\r\n\r\nconst bgColors = [\"#1abc9c\", \"#2ecc71\", \"#3498db\"];\r\n\r\nconst randomImg = () => {\r\n  const emojis = [rock, paper, scissors];\r\n  const randomNum = Math.floor(Math.random() * 3);\r\n  return emojis[randomNum];\r\n};\r\n\r\nrandomImg();\r\n\r\nconst PlayScreen = () => {\r\n  const [counter, setCounter] = useState(3);\r\n  useEffect(() => {\r\n    if (counter < 1) {\r\n      return;\r\n    }\r\n    const timer = setTimeout(() => {\r\n      setCounter((prv) => prv - 1);\r\n    }, 500);\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [counter]);\r\n\r\n  return (\r\n    <View\r\n      style={StyleSheet.compose(\r\n        { backgroundColor: bgColors[counter - 1] },\r\n        styles.container\r\n      )}\r\n    >\r\n      {counter < 1 ? (\r\n        <>\r\n          <Image style={styles.sign} source={randomImg()} />\r\n          <View style={styles.button}>\r\n            <Button onPress={() => setCounter(3)} title=\"Play Again\"></Button>\r\n          </View>\r\n        </>\r\n      ) : (\r\n        <Text style={styles.counter}>{counter}</Text>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flex: 1,\r\n  },\r\n  counter: {\r\n    fontSize: 120,\r\n    color: TouchableWithoutFeedback,\r\n  },\r\n  sign: {\r\n    width: 220,\r\n    height: 220,\r\n  },\r\n  button: {\r\n    position: \"absolute\",\r\n    bottom: 40,\r\n  },\r\n});\r\n\r\nexport default PlayScreen;\r\n","import { StatusBar } from \"expo-status-bar\";\nimport { useState } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { Button } from \"react-native-web\";\n\nimport PlayScreen from \"./src/PlayScreen\";\n\nexport default function App() {\n  const [play, setPlay] = useState(false);\n  return play ? (\n    <PlayScreen />\n  ) : (\n    <View style={styles.container}>\n      <Text style={styles.header}>Rock Paper Scissors</Text>\n      <Text style={{ fontSize: 45 }}>üëä‚úã‚úåÔ∏è</Text>\n      <View style={styles.button}>\n        <Button title=\"Play\" onPress={() => setPlay(true)}></Button>\n      </View>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  header: {\n    fontSize: 30,\n    marginBottom: 10,\n  },\n  button: {\n    marginTop: 30,\n    width: 250,\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/rock.79436ec1.png\";","module.exports = __webpack_public_path__ + \"static/media/paper.599c25df.png\";","module.exports = __webpack_public_path__ + \"static/media/scissors.f27b7752.png\";"],"sourceRoot":""}